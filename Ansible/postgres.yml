---
- hosts: postgresrv
  become: yes

  vars_files:
    - vars.yml

  pre_tasks:
    - name: Disable UFW
      community.general.ufw:
        state: disabled

    - name: "Allow 5432/tcp"
      community.general.ufw:
        rule: allow
        port: 5432
        proto: tcp
    
    - name: "Allow 22/tcp"
      community.general.ufw:
        rule: allow
        port: 22
        proto: tcp

    - name: "Install packages"
      apt: "name={{ item }} state=present"
      with_items:
        - postgresql
        - postgresql-contrib
        - libpq-dev
        - python-dev

    - name: "Install Python packages"
      pip: "name={{ item }}  state=present"
      with_items:
        - psycopg2

  tasks:
    - name: "Find out if PostgreSQL is initialized"
      ansible.builtin.stat:
        path: "{{ pg_hba_conf }}"
      register: postgres_data

    - name: "Initialize PostgreSQL"
      shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exists

    - name: "Start and enable services"
      service: "name={{ item }} state=started enabled=yes"
      with_items:
        - postgresql

# Central DB
    - name: "Create Central database"
      postgresql_db:
        state: present
        name: "{{ db_name }}"
      become: yes
      become_user: postgres

    - name: "Create db user"
      postgresql_user:
        state: present
        name: "{{ db_user }}"
        password: "{{ db_password }}"
      become: yes
      become_user: postgres

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "{{ db_name }}"
        roles: "{{ db_user }}"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres

    - name: "Allow md5 connection for the db user"
      blockinfile:
        dest: "{{ pg_hba_conf }}"
        block: |
          host    all             all             0.0.0.0/0                md5

    - name: "Allow remote connections configuration to postgresql.conf"
      blockinfile:
        dest: "{{ postgresql_conf }}"
        block: |
          listen_addresses = '*'

    - name: "Restart postgresslq"
      ansible.builtin.service:
        name: postgresql
        state: restarted


  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted

